name: Deploy to Vercel

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
      ACCESS_TOKEN_EXPIRY: ${{ secrets.ACCESS_TOKEN_EXPIRY }}
      REFRESH_TOKEN_EXPIRY: ${{ secrets.REFRESH_TOKEN_EXPIRY }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      PUBNUB_PUBLISH_KEY: ${{ secrets.PUBNUB_PUBLISH_KEY }}
      PUBNUB_SUBSCRIBE_KEY: ${{ secrets.PUBNUB_SUBSCRIBE_KEY }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Create .env file
        run: |
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_HOST=$DB_HOST" >> .env
          echo "DB_PORT=$DB_PORT" >> .env
          echo "DB_DATABASE=$DB_DATABASE" >> .env
          echo "ACCESS_TOKEN_SECRET=$ACCESS_TOKEN_SECRET" >> .env
          echo "REFRESH_TOKEN_SECRET=$REFRESH_TOKEN_SECRET" >> .env
          echo "ACCESS_TOKEN_EXPIRY=$ACCESS_TOKEN_EXPIRY" >> .env
          echo "REFRESH_TOKEN_EXPIRY=$REFRESH_TOKEN_EXPIRY" >> .env
          echo "CLOUDINARY_CLOUD_NAME=$CLOUDINARY_CLOUD_NAME" >> .env
          echo "CLOUDINARY_API_KEY=$CLOUDINARY_API_KEY" >> .env
          echo "CLOUDINARY_API_SECRET=$CLOUDINARY_API_SECRET" >> .env
          echo "PUBNUB_PUBLISH_KEY=$PUBNUB_PUBLISH_KEY" >> .env
          echo "PUBNUB_SUBSCRIBE_KEY=$PUBNUB_SUBSCRIBE_KEY" >> .env

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Deploy to Vercel
        run: npx vercel --prod --yes --token=$VERCEL_TOKEN
